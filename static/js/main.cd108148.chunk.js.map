{"version":3,"sources":["components/Good/Good.jsx","types.js","components/GoodsList/GoodsList.jsx","components/FormButton/FormButton.jsx","components/GoodsForm/GoodsForm.jsx","api/goods.js","App.js","index.js"],"names":["Good","PropTypes","shape","id","number","isRequired","name","string","color","good","style","GoodsList","goods","className","map","key","FormButton","text","action","type","onClick","GoodsForm","getAll","get5First","getRedGoods","API_URL","App","state","a","fetch","then","response","json","setState","sort","left","right","localeCompare","slice","filter","this","getAllGoods","get5FirstGoods","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6UAGaA,GCDWC,IAAUC,MAAM,CACtCC,GAAIF,IAAUG,OAAOC,WACrBC,KAAML,IAAUM,OAAOF,WACvBG,MAAOP,IAAUM,OAAOF,aDFN,SAAC,GAAD,IAAGI,EAAH,EAAGA,KAAH,OAClB,0BACEC,MAAO,CACLF,MAAOC,EAAKD,QAGbC,EAAKH,QEFGK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,wBAAIC,UAAU,cACXD,EAAME,KAAI,SAAAL,GAAI,OACb,wBAAIM,IAAKN,EAAKN,IACZ,kBAAC,EAAD,CAAMM,KAAMA,WCRPO,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACxB,4BACEC,KAAK,SACLC,QAASF,EACTL,UAAU,6BAETI,ICLQI,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,YAAtB,OACvB,0BAAMX,UAAU,wCACd,kBAAC,EAAD,CACEI,KAAK,iBACLC,OAAQI,IAEV,kBAAC,EAAD,CACEL,KAAK,qBACLC,OAAQK,IAEV,kBAAC,EAAD,CACEN,KAAK,iBACLC,OAAQM,MCfRC,G,MAAO,yEAQN,ICgDQC,E,4MAhDbC,MAAQ,CACNf,MAAO,I,wFAGT,iCAAAgB,EAAA,sDDTOC,MAAMJ,GACVK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlB,GAAK,OAAIA,KCSZkB,MAAK,SAAAlB,GAAK,OAAI,EAAKqB,SAAS,CAC3BrB,aAHN,2C,kFAOA,WAAkB,IAAD,ODXYiB,MAAMJ,GAClCK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAClB,GAGL,OAFAA,EAAMsB,MAAK,SAACC,EAAMC,GAAP,OAAiBD,EAAK7B,KAAK+B,cAAcD,EAAM9B,SAEnDM,EAAM0B,MAAM,EAAG,MCQnBR,MAAK,SAAAlB,GAAK,OAAI,EAAKqB,SAAS,CAC3BrB,e,yBAIN,WAAe,IAAD,ODViBiB,MAAMJ,GACpCK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlB,GAAK,OAAIA,EAAM2B,QAAO,SAAA9B,GAAI,MAAmB,QAAfA,EAAKD,YCUpCsB,MAAK,SAAAlB,GAAK,OAAI,EAAKqB,SAAS,CAC3BrB,e,oBAIN,WAAU,IAAD,OACP,OACE,oCACE,wBAAIC,UAAU,2BAAd,yBACA,kBAAC,EAAD,CACED,MAAO4B,KAAKb,MAAMf,QAEpB,kBAAC,EAAD,CACEU,OAAQ,WACN,EAAKmB,eAEPlB,UAAW,WACT,EAAKmB,kBAEPlB,YAAa,WACX,EAAKA,sB,GAzCCmB,IAAMC,WCJxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.cd108148.chunk.js","sourcesContent":["import React from 'react';\nimport { GoodType } from '../../types';\n\nexport const Good = ({ good }) => (\n  <span\n    style={{\n      color: good.color,\n    }}\n  >\n    {good.name}\n  </span>\n);\n\nGood.propTypes = {\n  good: GoodType.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const GoodType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Good } from '../Good';\nimport { GoodType } from '../../types';\n\nimport './GoodsList.scss';\n\nexport const GoodsList = ({ goods }) => (\n  <ul className=\"list-goods\">\n    {goods.map(good => (\n      <li key={good.id}>\n        <Good good={good} />\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(GoodType.isRequired).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FormButton = ({ text, action }) => (\n  <button\n    type=\"button\"\n    onClick={action}\n    className=\"control button is-primary\"\n  >\n    {text}\n  </button>\n);\n\nFormButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormButton } from '../FormButton';\n\nexport const GoodsForm = ({ getAll, get5First, getRedGoods }) => (\n  <form className=\"field is-grouped is-grouped-centered\">\n    <FormButton\n      text=\"Load all goods\"\n      action={getAll}\n    />\n    <FormButton\n      text=\"Load 5 first goods\"\n      action={get5First}\n    />\n    <FormButton\n      text=\"Load red goods\"\n      action={getRedGoods}\n    />\n  </form>\n);\n\nGoodsForm.propTypes = {\n  getAll: PropTypes.func.isRequired,\n  get5First: PropTypes.func.isRequired,\n  getRedGoods: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => goods);\n}\n\nexport const get5First = () => fetch(API_URL)\n  .then(response => response.json())\n  .then((goods) => {\n    goods.sort((left, right) => left.name.localeCompare(right.name));\n\n    return goods.slice(0, 5);\n  });\n\nexport const getRedGoods = () => fetch(API_URL)\n  .then(response => response.json())\n  .then(goods => goods.filter(good => good.color === 'red'));\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { GoodsForm } from './components/GoodsForm';\n\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  async getAllGoods() {\n    getAll()\n      .then(goods => this.setState({\n        goods,\n      }));\n  }\n\n  get5FirstGoods() {\n    get5First()\n      .then(goods => this.setState({\n        goods,\n      }));\n  }\n\n  getRedGoods() {\n    getRedGoods()\n      .then(goods => this.setState({\n        goods,\n      }));\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"content is-large header\">Dynamic list of Goods</h1>\n        <GoodsList\n          goods={this.state.goods}\n        />\n        <GoodsForm\n          getAll={() => {\n            this.getAllGoods();\n          }}\n          get5First={() => {\n            this.get5FirstGoods();\n          }}\n          getRedGoods={() => {\n            this.getRedGoods();\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}